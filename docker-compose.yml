services:
    app:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: rent_app
        restart: unless-stopped
        volumes:
            - .:/var/www
        networks:
            - app-network
        depends_on:
            - mysql

    mysql:
        image: mysql:8.0
        container_name: mysql
        restart: unless-stopped
        environment:
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_USER: ${DB_USERNAME}
            MYSQL_PASSWORD: ${DB_PASSWORD}
        volumes:
            - mysql_data:/var/lib/mysql
        networks:
            - app-network
        ports:
            - "3307:3306"

    web:
        container_name: rent_web
        image: nginx:alpine
        ports:
            - "80:80"
        volumes:
            - .:/var/www
            - ./nginx.conf:/etc/nginx/conf.d/default.conf
        depends_on:
            - app
        networks:
            - app-network

    node:
        container_name: nodes
        image: node:20
        working_dir: /var/www
        volumes:
            - .:/var/www
        networks:
            - app-network
        command: bash -c "npm install && npm run build"

volumes:
    mysql_data:

networks:
    app-network:
        driver: bridge
